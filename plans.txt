+detect disconnect on client
	change background to dim

	connect => Un (change background to dim)


+animate new step for car
	blink 3 time, green
	solid thick green border
	un

+store
	stepsById
	arrStepIds // [stepid1, stepid2, ...]
	carsById
	objStepIdsAndCarIds // { stepid1: {carid1: true, carid2: true, ... }, stepid2: {...}, ... }
								// --this and reselect
	                    // { stepid1: {carid1: timestamp, carid2: timestamp, ... }, stepid2: {...}, ... }  ?
	                    // { stepid1: [carid1, carid2, ...], stepid2: [...], ... }  ?
	                    // { stepid1: [{carid1, timestamp: timestamp1}, {carid2:timestamp2}, ...], stepid2: [...], ... }  ?

	// intersection of many ( mA && mB = mC)    (mA, mB) => {return mC}
	//     newCar = {carid1: stepid1, carid2: "" } intersect with {carid5: stepid3, carid6: stepid1}

+on car change state redraw only two columns
	MyTable = MyColumn MyColumn ...
	MyColumn = MyHeadCell MyColumnBody
	MyColumnBody = MyBodyCell MyBodyCell ...

some filter by columns list
	Acceptance: all columns
	Washing: ['Acceptance', 'Washing (wait)', 'Washing', 'Direct acceptance (wait)', 
		'Direct acceptance (wait)', 'Mechanic (wait)']

	1) transfer parameters to MyTable (<Router to component={MyTable}>)
		a) component={MyTable} (example react-redux v4)
		b) render
		c) childrens
	2) or filter columns by url (example in redux)
	3) or change state by url. Is it possible?
		state.filter 		
		state.AllColumns (fullstate --+ )
				state.filteredColumns
					--+ selColumns 
					--+ selColumnsWithCars

	not Link, use <a> reload app every choice
	not react-router

	initial location.pathname --+ filter

post
	currentCar:
	nextCar:

	socket.io 
		storing data associated with each clien

step Working, workshop Metalwork (Mechanic)
step Working, workshop Tinwork

in table nabour head cell
	|   working (purpl)       |
	|-------------------------|
	| wait(light) |  (purpl)  |